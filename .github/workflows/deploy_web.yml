name: deploy web
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            shared: 
              - 'shared/**'
            eungabi:
              - 'eungabi/**'

      - name: Restore cached gradle
        id: cache-gradle-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            eungabi/build
            shared/build
          key: ${{ runner.os }}-gradle-caches

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: mkdocs build

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Compose Multiplatform Web App targeting JS(IR)
        if: steps.changes.outputs.shared == 'true' || steps.cache-gradle-save.outputs.cache-hit != 'true'
        run: |
          ./gradlew :shared:jsBrowserDistribution

      - name: Generate API Docs
        if: steps.changes.outputs.eungabi == 'true' || steps.cache-gradle-save.outputs.cache-hit != 'true'
        run: |
          ./gradlew :eungabi:dokkaHtml

      - name: Cache gradle caches
        id: cache-gradle-save
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            eungabi/build
            shared/build
          key: ${{ steps.cache-gradle-restore.outputs.cache-primary-key }}

      - name: Load files from cache
        if: steps.cache-gradle-save.outputs.cache-hit == 'true'
        run: |
          mkdir -p site/sampleApp
          cp -r shared/build/dist/js/productionExecutable/* site/sampleApp
          mkdir -p site/api
          cp -r eungabi/build/dokka/html/* site/api

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.TOKEN_GITHUB }}
          publish_dir: ./site